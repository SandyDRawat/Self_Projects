# -*- coding: utf-8 -*-
"""novel_downloader_without_translation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_-NZPPoZN31B5FkiWi3n5ryqxZVyFvDo
"""


import requests
from bs4 import BeautifulSoup
from ebooklib import epub

def scrapper(url):
    req = requests.get(url)
    if req.status_code == 200:
        req.encoding = 'utf-8'
        soup = BeautifulSoup(req.text, "html.parser")
        next_chapter_link = soup.find('a', id='next_chap')['href']
        paragraphs = soup.find_all('p')
        chapter_content = ''
        for p in paragraphs:
            chapter_content += str(p)  # Convert to string to preserve HTML tags
        return chapter_content, next_chapter_link
    else:
        print("Failed to retrieve content from the URL.")
        return None, None

# Function to create an ePub file
# Function to create an ePub file
def create_epub(chapter_contents, novel_name, start_chapter, num_chapters):
    end_chapter = start_chapter + num_chapters - 1
    epub_name = f"{novel_name}_{start_chapter}_to_{end_chapter}.epub"
    book = epub.EpubBook()
    book.set_identifier(epub_name)
    book.set_title(novel_name)
    book.add_author("Author Name")  # Replace with actual author name
    for i, content in enumerate(chapter_contents, start=start_chapter):
        chapter_number = i - start_chapter + 1  # Adjusting chapter number
        chapter_content_with_number = f'<h1>Chapter {chapter_number}</h1>\n{content}'
        chapter = epub.EpubHtml(title=f'Chapter {chapter_number}', file_name=f'chapter_{chapter_number}.xhtml', lang='en')
        chapter.content = chapter_content_with_number
        book.add_item(chapter)
        book.toc.append(chapter)
    book.add_item(epub.EpubNcx())
    book.add_item(epub.EpubNav())
    style = 'body { font-family: Times, Times New Roman, serif; }'
    nav_css = epub.EpubItem(uid="style_nav", file_name="style/nav.css", media_type="text/css", content=style)
    book.add_item(nav_css)
    book.spine = ['nav'] + book.toc
    epub.write_epub(epub_name, book)

url = input("URL of The Starting Chapter: ")
num_chapters_to_scrape = int(input("Number of Chapters: "))

# Extract novel name from URL
novel_name = url.split('novel-book/')[1].split('/chapter')[0]

# Initialize lists to store chapter content and chapter numbers
chapter_contents = []
chapter_numbers = []

# Start scraping loop
for i in range(num_chapters_to_scrape):
    url0 = url
    chapter_content, url = scrapper(url)
    print(url)
    if chapter_content:
        chapter_contents.append(chapter_content)
        chapter_numbers.append(int(url0.split('/')[-1].split('-')[1]))
    #url = url.rsplit('-', 1)[0] + f'-{i + 2}'  # Correcting the URL for the next chapter

# Get start chapter and end chapter
start_chapter = min(chapter_numbers)
end_chapter = start_chapter + num_chapters_to_scrape - 1


# Export the content to ePub
create_epub(chapter_contents, novel_name, start_chapter, num_chapters_to_scrape)

